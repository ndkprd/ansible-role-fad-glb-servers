- name: Set FAD GLB Server Member REST API endpoint vars ({{ server_member.name }}).
  ansible.builtin.set_fact:
    fad_api_endpoint_server_members: https://{{ ansible_host }}/api/global_load_balance_servers_child_virtual_server_list?vdom={{ fad_vdom }}&pkey={{ glb_server.name }}&mkey={{ server_member.name }}
    fad_glb_servers_member_name: "{{ glb_server.data_center }}/{{ glb_server.name }}/{{ server_member.name }}"
  tags:
    - fad_glb_servers_members

- name: Print out the GLB Server Member REST API endpoint ({{ fad_glb_servers_member_name }}).
  ansible.builtin.debug:
    msg: "This FAD GLB Server Member REST API endpoint: {{ fad_api_endpoint_server_members }}"
  tags:
    - fad_glb_servers_members
    - debug

- name: Get the existing value of GLB Server Member entry ({{ fad_glb_servers_member_name }}).
  ansible.builtin.uri:
    method: GET
    url: "{{ fad_api_endpoint_server_members }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
  register: fad_server_member_existing_data
  delegate_to: localhost
  tags:
    - fad_glb_servers_members

- name: Print the existing value of GLB Server Member entry ({{ fad_glb_servers_member_name }}).
  ansible.builtin.debug:
    var: fad_server_member_existing_data.json.payload
  delegate_to: localhost
  tags:
    - fad_glb_servers_members
    - debug

- name: Write GLB Server Member request body json tmp file ({{ fad_glb_servers_member_name }}).
  ansible.builtin.copy:
    content: |
      {
        "address-type": "{{ server_member.address_type }}",
        "gateway": "{{ server_member.gateway }}",
        "health_check_ctrl": "{{ server_member.health_check_ctrl }}",
        "health_check_inherit": "{{ server_member.health_check_inherit }}",
        "health_check_list": "{{ server_member.health_check_list }}",
        "health_check_relationship": "{{ server_member.health_check_relationshio }}",
        "ip": "{{ server_member.ipv4 }}",
        "ip6": "{{ server_member.ipv6 }}",
        "mkey": "{{ server_member.name }}"
      }
    dest: "/tmp/fad_glb_server_members_{{ server_member.name }}_request_body.json"
    mode: u+rw,g-rw,o-rw
  register: request_body
  delegate_to: localhost
  run_once: true
  tags:
    - fad_glb_servers_members

- name: Trying to create new GLB Server Member entry ({{ fad_glb_servers_member_name }}).
  ansible.builtin.uri:
    method: POST
    url: "{{ fad_api_endpoint_server_members }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: "{{ lookup('ansible.builtin.file', request_body.dest) }}"
  register: fad_server_member_post_result
  when: fad_server_member_existing_data.json.payload.mkey is undefined
  delegate_to: localhost
  changed_when: "fad_server_member_post_result.json.payload == 0"
  failed_when: "fad_server_member_post_result.json.payload != -15 and fad_server_member_post_result.json.payload != 0"
  tags:
    - fad_glb_servers_members

- name: Update the GLB Server Member entry if entry exist ({{ fad_glb_servers_member_name }}).
  ansible.builtin.uri:
    method: PUT
    url: "{{ fad_api_endpoint_server_members }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: "{{ lookup('ansible.builtin.file', request_body.dest) }}"
  register: fad_server_member_put_result
  delegate_to: localhost
  when: >
    (fad_server_member_existing_data.json.payload.mkey is defined) and
    (fad_server_member_existing_data.json.payload.[address-type] != server_member.address_type or
    fad_server_member_existing_data.json.payload.gateway != server_member.gateway or
    fad_server_member_existing_data.json.payload.health_check_ctrl != server_member.health_check_ctrl or
    fad_server_member_existing_data.json.payload.health_check_inherit != server_member.health_check_inherit or
    fad_server_member_existing_data.json.payload.health_check_list != server_member.health_check_list or
    fad_server_member_existing_data.json.payload.health_check_relationship != server_member.health_check_relationship or
    fad_server_member_existing_data.json.payload.ip != server_member.ipv4 or
    fad_server_member_existing_data.json.payload.ip6 != server_member.ipv6)
  failed_when: "fad_server_member_put_result.json.payload != -15 and fad_server_member_put_result.json.payload != 0"
  tags:
    - fad_glb_servers_members

- name: Check if the FAD GLB Server Member values has changed ({{ fad_glb_servers_member_name }}).
  ansible.builtin.uri:
    method: GET
    url: "{{ fad_api_endpoint_server_members }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
  register: fad_server_member_new_data
  changed_when: "fad_server_member_new_data.json.payload != fad_server_member_existing_data.json.payload"
  delegate_to: localhost
  tags:
    - fad_glb_servers_members

- name: Print the existing value of data center entry ({{ fad_glb_servers_member_name }}).
  ansible.builtin.debug:
    var: fad_server_member_new_data.json
  delegate_to: localhost
  tags:
    - fad_glb_servers_members
    - debug
